Results of doctest builder run on 2023-08-08 18:56:05
=====================================================

Document: usage
---------------
1 items passed all tests:
  12 tests in basic
12 tests in 1 items.
12 passed and 0 failed.
Test passed.

Document: api
-------------
**********************************************************************
File "api.rst", line ?, in default
Failed example:
    scene
Expected:
    Scene(children=[Cuboid(width=200, length=1000, height=100)]) 
Got:
    Scene(build_ele='build_ele')
**********************************************************************
File "api.rst", line ?, in default
Failed example:
    c
Expected:
    Cuboid(width=200, length=1000, height=100) 
Got:
    Space(Coords(start_point=Point3D(0, 0, 0), end_point=Point3D(200, 1000, 100)), Coords(start_point=Point3D(0, 0, 0), end_point=Point3D(200, 1000, 100)))
**********************************************************************
File "api.rst", line ?, in default
Failed example:
    c
Expected:
    Cuboid(width=200, length=1000, height=100)   
Got:
    'Cuboid: Column'
**********************************************************************
File "api.rst", line ?, in default
Failed example:
    big_cube.place(small_cube, left=300)
Exception raised:
    Traceback (most recent call last):
      File "C:\Users\yoliy\anaconda3\envs\mypp_env\lib\doctest.py", line 1336, in __run
        exec(compile(example.source, filename, "single",
      File "<doctest default[0]>", line 1, in <module>
        big_cube.place(small_cube, left=300)
    NameError: name 'big_cube' is not defined
**********************************************************************
File "api.rst", line ?, in default
Failed example:
    def create_element(build_ele, doc):
Exception raised:
    Traceback (most recent call last):
      File "C:\Users\yoliy\anaconda3\envs\mypp_env\lib\doctest.py", line 1336, in __run
        exec(compile(example.source, filename, "single",
      File "C:\Users\yoliy\anaconda3\envs\mypp_env\lib\site-packages\sphinx\ext\doctest.py", line 471, in compile
        return compile(code, name, self.type, flags, dont_inherit)
      File "<doctest default[0]>", line 1
        def create_element(build_ele, doc):
                                          ^
    SyntaxError: unexpected EOF while parsing
**********************************************************************
File "api.rst", line ?, in default
Failed example:
        scene  = pp.create_scene(build_ele)
Exception raised:
    Traceback (most recent call last):
      File "C:\Users\yoliy\anaconda3\envs\mypp_env\lib\doctest.py", line 1336, in __run
        exec(compile(example.source, filename, "single",
      File "C:\Users\yoliy\anaconda3\envs\mypp_env\lib\site-packages\sphinx\ext\doctest.py", line 471, in compile
        return compile(code, name, self.type, flags, dont_inherit)
      File "<doctest default[1]>", line 1
        scene  = pp.create_scene(build_ele)
        ^
    IndentationError: unexpected indent
**********************************************************************
File "api.rst", line ?, in default
Failed example:
        scene.place(big_cube)
Exception raised:
    Traceback (most recent call last):
      File "C:\Users\yoliy\anaconda3\envs\mypp_env\lib\doctest.py", line 1336, in __run
        exec(compile(example.source, filename, "single",
      File "C:\Users\yoliy\anaconda3\envs\mypp_env\lib\site-packages\sphinx\ext\doctest.py", line 471, in compile
        return compile(code, name, self.type, flags, dont_inherit)
      File "<doctest default[2]>", line 1
        scene.place(big_cube)
        ^
    IndentationError: unexpected indent
**********************************************************************
File "api.rst", line ?, in default
Failed example:
        return scene.pythonpart
Exception raised:
    Traceback (most recent call last):
      File "C:\Users\yoliy\anaconda3\envs\mypp_env\lib\doctest.py", line 1336, in __run
        exec(compile(example.source, filename, "single",
      File "C:\Users\yoliy\anaconda3\envs\mypp_env\lib\site-packages\sphinx\ext\doctest.py", line 471, in compile
        return compile(code, name, self.type, flags, dont_inherit)
      File "<doctest default[3]>", line 1
        return scene.pythonpart
        ^
    IndentationError: unexpected indent
**********************************************************************
File "api.rst", line ?, in default
Failed example:
    big_cube.place(small_cube, center=True)
Exception raised:
    Traceback (most recent call last):
      File "C:\Users\yoliy\anaconda3\envs\mypp_env\lib\doctest.py", line 1336, in __run
        exec(compile(example.source, filename, "single",
      File "<doctest default[0]>", line 1, in <module>
        big_cube.place(small_cube, center=True)
    NameError: name 'big_cube' is not defined
**********************************************************************
File "api.rst", line ?, in default
Failed example:
    big_cube.place(small_cube, center=Ture, right=20)
Exception raised:
    Traceback (most recent call last):
      File "C:\Users\yoliy\anaconda3\envs\mypp_env\lib\doctest.py", line 1336, in __run
        exec(compile(example.source, filename, "single",
      File "<doctest default[0]>", line 1, in <module>
        big_cube.place(small_cube, center=Ture, right=20)
    NameError: name 'big_cube' is not defined
**********************************************************************
File "api.rst", line ?, in default
Failed example:
    scene.place(big_cube, center=True, bottom=0)
Exception raised:
    Traceback (most recent call last):
      File "C:\Users\yoliy\anaconda3\envs\mypp_env\lib\doctest.py", line 1336, in __run
        exec(compile(example.source, filename, "single",
      File "<doctest default[0]>", line 1, in <module>
        scene.place(big_cube, center=True, bottom=0)
    NameError: name 'big_cube' is not defined
**********************************************************************
1 items had failures:
  11 of  19 in default
19 tests in 1 items.
8 passed and 11 failed.
***Test Failed*** 11 failures.

Doctest summary
===============
   31 tests
   11 failures in tests
    0 failures in setup code
    0 failures in cleanup code
